// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(created_at, updated_at, email, password)
VALUES (
    NOW(),
    NOW(),
    $1,
    $2
)
RETURNING id, email, username, firstname, lastname, password, facebook_id, reset_password_token, reset_password_expires, is_premium, premium_level, stripe_customer_id, is_deleted, created_at, updated_at
`

type CreateUserParams struct {
	Email    sql.NullString
	Password sql.NullString
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Email, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.Firstname,
		&i.Lastname,
		&i.Password,
		&i.FacebookID,
		&i.ResetPasswordToken,
		&i.ResetPasswordExpires,
		&i.IsPremium,
		&i.PremiumLevel,
		&i.StripeCustomerID,
		&i.IsDeleted,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
